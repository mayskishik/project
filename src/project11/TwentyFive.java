/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project11;

import static java.awt.image.ImageObserver.HEIGHT;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import static project11.SixteenSticks.alphabeta;
import static project11.SixteenSticks.generateGameTree;

/**
 *
 * @author marah
 */
public class TwentyFive extends javax.swing.JFrame {
    private final Random random = new Random();
     boolean flag1 =true;
     boolean flag2 =true;
     boolean flag3 =true;
     boolean flag4 =true;
     boolean flag5 =true;
     boolean flagcomputer =false;
     int clickrow1=0;
     int clickrow2=0;
     int clickrow3=0;
     int clickrow4=0;
     int clickrow5=0;
     int sticksize=25;
     ArrayList<String> rowone = new ArrayList<String>();
     ArrayList<String> rowtwo = new ArrayList<String>();
     ArrayList<String> rowthree = new ArrayList<String>();
     ArrayList<String> rowfour = new ArrayList<String>();
     ArrayList<String> rowfive = new ArrayList<String>();
     tree root =new tree();
    public TwentyFive() {
        initComponents();
        for (int i=0;i<25;i++){
            if (i==0){
                rowone.add("Stick"+(i+1));
            }
            else if (i>0 & i<4){
                rowtwo.add("Stick"+(i+1));
            }
            else if (i>4 & i<9){ 
                rowthree.add("Stick"+(i+1));
            }
            else if (i>9 & i<16)
            rowfour.add("Stick"+i);
            else rowfive.add("Stick"+i);
                
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        home = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        row1 = new javax.swing.JLabel();
        row2 = new javax.swing.JLabel();
        row3 = new javax.swing.JLabel();
        row5 = new javax.swing.JLabel();
        row4 = new javax.swing.JLabel();
        stick1 = new javax.swing.JLabel();
        stick4 = new javax.swing.JLabel();
        stick3 = new javax.swing.JLabel();
        stick2 = new javax.swing.JLabel();
        stick9 = new javax.swing.JLabel();
        stick8 = new javax.swing.JLabel();
        stick7 = new javax.swing.JLabel();
        stick6 = new javax.swing.JLabel();
        stick5 = new javax.swing.JLabel();
        stick15 = new javax.swing.JLabel();
        stick14 = new javax.swing.JLabel();
        stick13 = new javax.swing.JLabel();
        stick12 = new javax.swing.JLabel();
        stick11 = new javax.swing.JLabel();
        stick16 = new javax.swing.JLabel();
        stick25 = new javax.swing.JLabel();
        stick24 = new javax.swing.JLabel();
        stick23 = new javax.swing.JLabel();
        stick10 = new javax.swing.JLabel();
        stick22 = new javax.swing.JLabel();
        stick21 = new javax.swing.JLabel();
        stick20 = new javax.swing.JLabel();
        stick19 = new javax.swing.JLabel();
        stick18 = new javax.swing.JLabel();
        stick17 = new javax.swing.JLabel();
        newgame = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back1.jpg"))); // NOI18N

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back1.jpg"))); // NOI18N
        jLabel9.setText("jLabel9");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        home.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/hhhhhhh.png"))); // NOI18N
        home.setAlignmentX(10.0F);
        home.setAlignmentY(20.0F);
        home.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeMouseClicked(evt);
            }
        });
        jPanel1.add(home, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/goback.png"))); // NOI18N
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 10, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/compPlay.png"))); // NOI18N
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 470, -1, -1));

        row1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/row1.png"))); // NOI18N
        row1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row1MouseClicked(evt);
            }
        });
        jPanel1.add(row1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, -1, -1));

        row2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/row2.png"))); // NOI18N
        row2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row2MouseClicked(evt);
            }
        });
        jPanel1.add(row2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, -1, -1));

        row3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/row3.png"))); // NOI18N
        row3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row3MouseClicked(evt);
            }
        });
        jPanel1.add(row3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        row5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/row5.png"))); // NOI18N
        row5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row5MouseClicked(evt);
            }
        });
        jPanel1.add(row5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 390, -1, -1));

        row4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/row4.png"))); // NOI18N
        row4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                row4MouseClicked(evt);
            }
        });
        jPanel1.add(row4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 320, -1, -1));

        stick1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, -1, -1));

        stick4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick4, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, -1, -1));

        stick3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 170, -1, -1));

        stick2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick2, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 170, -1, -1));

        stick9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 230, -1, -1));

        stick8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick8, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, -1, -1));

        stick7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 230, 50, -1));

        stick6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick6, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, -1));

        stick5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 230, -1, -1));

        stick15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick15, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, -1, -1));

        stick14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick14, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, 40, 60));

        stick13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 290, -1, -1));

        stick12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick12, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 40, -1));

        stick11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick11, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 290, 40, -1));

        stick16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick16, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, -1, -1));

        stick25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick25, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, -1, -1));

        stick24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick24, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, -1, -1));

        stick23.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick23, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 360, -1, -1));

        stick10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick10, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 290, -1, -1));

        stick22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick22, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 360, -1, -1));

        stick21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick21, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 360, -1, -1));

        stick20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick20, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 40, -1));

        stick19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick19, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 40, -1));

        stick18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick18, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 360, 40, -1));

        stick17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/wood.png"))); // NOI18N
        jPanel1.add(stick17, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 360, -1, -1));

        newgame.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        newgame.setForeground(new java.awt.Color(255, 255, 255));
        newgame.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/newGame.png"))); // NOI18N
        newgame.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newgameMouseClicked(evt);
            }
        });
        jPanel1.add(newgame, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 200, -1, -1));
        newgame.setVisible(false);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/back1.jpg"))); // NOI18N
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, 530));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeMouseClicked
        // TODO add your handling code here:
        int an=JOptionPane.showConfirmDialog(rootPane, " Are you sure to exit game?");
        if (an == 0){
             NewJFrame l = new NewJFrame();
             l.show();
             dispose();
        }
    }//GEN-LAST:event_homeMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
              int an=JOptionPane.showConfirmDialog(rootPane, " Are you sure to exit game?");
        if (an == 0){
            NumOfSticklevel2 jf = new NumOfSticklevel2();
            jf.show();
            dispose();
        }
    }//GEN-LAST:event_jLabel1MouseClicked

    private void row1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row1MouseClicked
        // TODO add your handling code here:
        if (flag1 ==true){
             flag2=false;
             flag3=false;
             flag4=false;
             flag5=false;
             flagcomputer =false;
             switch (clickrow1){
                case 0: 
                    hideStick("Stick1");
                    clickrow1++;
                    break;
            }
                endgame();
        }
    }//GEN-LAST:event_row1MouseClicked

    private void newgameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newgameMouseClicked
        // TODO add your handling code here:
        TwentyFive jf = new TwentyFive();
        jf.show();
        dispose();
    }//GEN-LAST:event_newgameMouseClicked

    private void row2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row2MouseClicked
        // TODO add your handling code here:
        if (flag2 == true){
            flag1 =false;
            flag3=false;
            flag4=false;
            flag5=false;
            flagcomputer =false;
              switch (clickrow2){
                case 0: 
                    hideStick("Stick2");
                    clickrow2++;
                    break;
                case 1: 
                    hideStick("Stick3");
                    clickrow2++;
                    break;
                case 2: 
                    hideStick("Stick4");
                    clickrow2++;
                    break;
              }
              endgame();
        }
    }//GEN-LAST:event_row2MouseClicked

    private void row3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row3MouseClicked
        // TODO add your handling code here:
         if (flag3 ==true){
            flag1 =false;
            flag2=false;
            flag4=false;
            flag5=false;
            flagcomputer =false;
            switch (clickrow3){
                case 0: 
                    hideStick("Stick5");
                    clickrow3++;
                    break;
                case 1: 
                    hideStick("Stick6");
                    clickrow3++;
                    break;
                case 2: 
                    hideStick("Stick7");
                    clickrow3++;
                    break;
                case 3: 
                    hideStick("Stick8");
                    clickrow3++;
                    break;
                case 4: 
                    hideStick("Stick9");
                    clickrow3++;
                    break;
                }
                endgame();   
         }
    }//GEN-LAST:event_row3MouseClicked

    private void row4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row4MouseClicked
        // TODO add your handling code here:
        if (flag4 ==true){
            flag1=false;
            flag2=false;
            flag3=false;
            flag5=false;
            flagcomputer =false;
            switch (clickrow4){
                case 0: 
                    hideStick("Stick10");
                    clickrow4++;
                    break;
                case 1: 
                    hideStick("Stick11");
                    clickrow4++;
                    break;
                case 2: 
                    hideStick("Stick12");
                    clickrow4++;
                    break;
                case 3: 
                    hideStick("Stick13");
                    clickrow4++;
                    break;
                case 4: 
                    hideStick("Stick14");
                    clickrow4++;
                    break;
                case 5: 
                    hideStick("Stick15");
                    clickrow4++;
                    break;
                case 6: 
                    hideStick("Stick16");
                    clickrow4++;
                    break;
                }
                endgame();
        }
    }//GEN-LAST:event_row4MouseClicked

    private void row5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_row5MouseClicked
        // TODO add your handling code here:
 if (flag5 ==true){
            flag1=false;
            flag2=false;
            flag3=false;
            flag4=false;
            flagcomputer =false;
            switch (clickrow5){
                case 0: 
                    hideStick("Stick17");
                    clickrow5++;
                    break;
                case 1: 
                    hideStick("Stick18");
                    clickrow5++;
                    break;
                case 2: 
                    hideStick("Stick19");
                    clickrow5++;
                    break;
                case 3: 
                    hideStick("Stick20");
                    clickrow5++;
                    break;
                case 4: 
                    hideStick("Stick21");
                    clickrow5++;
                    break;
                case 5: 
                    hideStick("Stick22");
                    clickrow5++;
                    break;
                case 6: 
                    hideStick("Stick23");
                    clickrow5++;
                    break;
                case 7: 
                    hideStick("Stick24");
                    clickrow5++;
                    break;
                case 8: 
                    hideStick("Stick25");
                    clickrow5++;
                    break;
                }
                endgame();
        }
    }//GEN-LAST:event_row5MouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        flag1=true;
        flag2=true;
        flag3=true;
        flag4=true;
        flag5=true;
        if (flagcomputer){
            JOptionPane.showMessageDialog(rootPane, "It is your turn");
        }
        else {
            flagcomputer =true;
            int [] numofstick = {rowone.size(),rowtwo.size(),rowthree.size(),rowfour.size(),rowfive.size()};
            root= generateGameTree(numofstick);
            Object [] num = alphabeta(root,20,Integer.MIN_VALUE,Integer.MAX_VALUE,true);
            int bestValue = (int) num[0];
            tree bestMove = (tree)(num[1]);
            root=bestMove;
            int randomnum = random.nextInt(5) + 1;
            performComputerMove (randomnum,bestValue);
            }
            endgame();
    }//GEN-LAST:event_jLabel2MouseClicked

    /**
     * @param args the command line arguments
     */                                  

    private void performComputerMove(int randomnum,int num) {
        switch (randomnum) {
            case 1:
                if (rowone.size()>=num){
                    performMove(rowone, num);
                }
                else {
                    randomnum = random.nextInt(3) + 1;
                    performComputerMove(randomnum,num);
                }
                break;
            case 2:
                if (rowtwo.size()>=num){
                    performMove(rowtwo, num);
                }
                else { 
                    //randomnum =  random.nextBoolean() ? 1 : 3;
                    randomnum = random.nextInt(2) + 1;
                    performComputerMove(randomnum,num);
                }
                break;
            case 3:
                if (rowthree.size()>=num){
                    performMove(rowthree, num);
                }
                else { 
                    randomnum = 4;
                    performComputerMove(randomnum,num);
                    }
                break;
            case 4:
                   if (rowfour.size()>=num){
                   performMove(rowfour, num);
                }
                else { 
                    randomnum = random.nextInt(3) + 1;
                    performComputerMove(randomnum,num);
                    }
    } 
}

private void performMove(ArrayList<String> row,int num) {
    if (row.size() > 0 ) {
        int i=0;
        while (i<num){
            String s=row.get(i);
            hideStick(s);
            num--;
            }
        } else {
            int randomnum = random.nextInt(3) + 1;
        }
    }

    private void hideStick(String s) {
        switch (s) {
            case "Stick1":
                stick1.setVisible(false);
                rowone.remove(s);
                row1.setVisible(false);
                break;
            case "Stick2":
                stick2.setVisible(false);
                rowtwo.remove(s);
                break;
            case "Stick3":
                stick3.setVisible(false);
                rowtwo.remove(s);
                break;
            case "Stick4":
                stick4.setVisible(false);
                rowtwo.remove(s);
                row2.setVisible(false);
                break;
            case "Stick5":
                stick5.setVisible(false);
                rowthree.remove(s);
                break;
            case "Stick6":
                stick6.setVisible(false);
                rowthree.remove(s);
                break;
            case "Stick7":
                stick7.setVisible(false);
                rowthree.remove(s);
                break;
            case "Stick8":
                stick8.setVisible(false);
                rowthree.remove(s);
                break;
            case "Stick9":
                stick9.setVisible(false);
                rowthree.remove(s);
                row3.setVisible(false);
                break;
            case "Stick10":
                stick10.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick11":
                stick11.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick12":
                stick12.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick13":
                stick13.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick14":
                stick14.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick15":
                stick15.setVisible(false);
                rowfour.remove(s);
                break;
            case "Stick16":
                stick16.setVisible(false);
                rowfour.remove(s);
                row4.setVisible(false);
                break;
           case "Stick17":
                stick17.setVisible(false);
                rowfive.remove(s);
                break;
            case "Stick18":
                stick18.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick19":
                stick19.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick20":
                stick20.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick21":
                stick21.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick22":
                stick22.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick23":
                stick23.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick24":
                stick24.setVisible(false);
                rowfive.remove(s);
                break;
           case "Stick25":
                stick25.setVisible(false);
                rowfive.remove(s);
                row5.setVisible(false);
                break;
            }
        }

    public void endgame(){
        Icon win = new javax.swing.ImageIcon(getClass().getResource("/icons/youwin.png"));
        Icon lose = new javax.swing.ImageIcon(getClass().getResource("/icons/youlose.png"));
        if (rowone.isEmpty() && rowtwo.isEmpty() && rowthree.isEmpty() && rowfour.isEmpty() && rowfive.isEmpty()){
            if (flagcomputer) JOptionPane.showMessageDialog(rootPane, " ", "", HEIGHT,win);
            else JOptionPane.showMessageDialog(rootPane, "", "", HEIGHT,lose); 
            jLabel1.setVisible(false);
            newgame.setVisible(true);
        }
    }
     
   public static tree generateGameTree(int[] initialHeaps) {
        tree root = new tree(initialHeaps);
        generateTree(root);
        return root;
    }
    private static void generateTree(tree node) {
        for (int i = 0; i < node.data.length; i++) {
            if (node.data[i] > 0) {
                // Try all possible moves by removing sticks from the current heap
                for (int remove = 1; remove <= node.data[i]; remove++) {
                    int[] newHeaps = node.data.clone();
                    newHeaps[i] -= remove;
                    tree child = new tree(newHeaps);
                    node.children.add(child);
                    generateTree(child); // Recursive call to continue generating the tree
                }
            }
        }
    }
   
   public static int heuristic( tree node ,boolean max){
       int nim = 0;
       for (int i = 0; i < node.children.size(); i++) {
            nim ^= node.data[i];
        }
        if ( !max ){
            if (nim == 0) {
                return 0;
            } else {
                return 1;
            }
        } else {
            if (nim == 0) {
                return 1;
            } else {
                return 0;
            }
        }
  }

    public static Object [] alphabeta(tree node, int depth, int alpha, int beta, boolean maximizingPlayer) {
        if (depth == 0 || node.children.isEmpty()) {
             return new Object []{heuristic( node,maximizingPlayer), node};
        }
        for (tree child : node.children) {
            child.visit=false;
        }
        tree bestChild = null;
        int bestValue;
         if (maximizingPlayer) {
            bestValue = Integer.MIN_VALUE;
            for (tree child : node.children) {
                Object [] result = alphabeta(child, depth - 1, alpha, beta, false);
                int evalScore = (int) result[0];
                tree childNode = (tree) result[1];

                if (evalScore > bestValue) {
                    child.visit= true;
                    bestValue = evalScore;
                    bestChild = childNode;
                }

                alpha = Math.max(alpha, evalScore);
                if (beta <= alpha) {
                    break;
                }
            }
        } else {
            bestValue = Integer.MAX_VALUE;
            for (tree child : node.children) {
                Object[] result = alphabeta(child, depth - 1, alpha, beta, true);
                int evalScore = (int) result[0];
                tree childNode = (tree) result[1];

                if (evalScore < bestValue) {
                    child.visit= true;
                    bestValue = evalScore;
                    bestChild = childNode;
                }

                beta = Math.min(beta, evalScore);
                if (beta <= alpha) {
                    break;
                }
            }
        }

        for (tree child : node.children) {
            if (child.visit) {
                bestChild = child;
            }
        }

        return new Object[]{bestValue, bestChild};
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TwentyFive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TwentyFive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TwentyFive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TwentyFive.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TwentyFive().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel newgame;
    private javax.swing.JLabel row1;
    private javax.swing.JLabel row2;
    private javax.swing.JLabel row3;
    private javax.swing.JLabel row4;
    private javax.swing.JLabel row5;
    private javax.swing.JLabel stick1;
    private javax.swing.JLabel stick10;
    private javax.swing.JLabel stick11;
    private javax.swing.JLabel stick12;
    private javax.swing.JLabel stick13;
    private javax.swing.JLabel stick14;
    private javax.swing.JLabel stick15;
    private javax.swing.JLabel stick16;
    private javax.swing.JLabel stick17;
    private javax.swing.JLabel stick18;
    private javax.swing.JLabel stick19;
    private javax.swing.JLabel stick2;
    private javax.swing.JLabel stick20;
    private javax.swing.JLabel stick21;
    private javax.swing.JLabel stick22;
    private javax.swing.JLabel stick23;
    private javax.swing.JLabel stick24;
    private javax.swing.JLabel stick25;
    private javax.swing.JLabel stick3;
    private javax.swing.JLabel stick4;
    private javax.swing.JLabel stick5;
    private javax.swing.JLabel stick6;
    private javax.swing.JLabel stick7;
    private javax.swing.JLabel stick8;
    private javax.swing.JLabel stick9;
    // End of variables declaration//GEN-END:variables
}
